name: Deploy para Github Pages e atualiza Supabase

on:
    push:
        branches: ["main"]

    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    # Build job
    build:
        runs-on: ubuntu-latest
        env:
            SITE_URL: ${{ secrets.SITE_URL }}
            SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
            SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
            OAUTH_REDIRECT_URL: ${{ secrets.OAUTH_REDIRECT_URL }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Detect package manager
              id: detect-package-manager
              run: |
                  if [ -f "${{ github.workspace }}/yarn.lock" ]; then
                    echo "manager=yarn" >> $GITHUB_OUTPUT
                    echo "command=install" >> $GITHUB_OUTPUT
                    exit 0
                  elif [ -f "${{ github.workspace }}/package.json" ]; then
                    echo "manager=npm" >> $GITHUB_OUTPUT
                    echo "command=ci" >> $GITHUB_OUTPUT
                    exit 0
                  else
                    echo "Unable to determine package manager"
                    exit 1
                  fi
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: "16"
                  cache: ${{ steps.detect-package-manager.outputs.manager }}
            - name: Setup Pages
              uses: actions/configure-pages@v3
              #with:
              # Automatically inject router.base in your Nuxt configuration file and set
              # target to static (https://nuxtjs.org/docs/configuration-glossary/configuration-target/).
              #
              # You may remove this line if you want to manage the configuration yourself.
              #static_site_generator: nuxt
            - name: Restore cache
              uses: actions/cache@v3
              with:
                  path: |
                      dist
                      .nuxt
                  key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
                  restore-keys: |
                      ${{ runner.os }}-nuxt-build-
            - name: Install dependencies
              run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
            - name: Static HTML export with Nuxt
              run: ${{ steps.detect-package-manager.outputs.manager }} run generate
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v1
              with:
                  path: ./dist

    # Deployment job
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v2

    migrate-production-database:
        needs: deploy
        runs-on: ubuntu-latest

        env:
            SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
            SUPABASE_DB_PASSWORD: ${{ secrets.PRODUCTION_DB_PASSWORD }}
            PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_REF }}

        steps:
          - name: Checkout
            uses: actions/checkout@v3
          - name: Copia config.toml
            run: |
                cp ${{ github.workspace }}/supabase/config.toml.example ${{ github.workspace }}/supabase/config.toml
          - name: Setup Supabase CLI
            uses: supabase/setup-cli@v1
            with:
                version: latest
            
          - name: Link Project
            run: supabase link --project-ref $PROJECT_ID
          - name: Migrate Database
            run: supabase db push
